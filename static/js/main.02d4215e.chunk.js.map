{"version":3,"sources":["store/action-types/index.ts","store/action-creators/index.ts","theme/global.ts","App.elements.ts","components/Tasks.elements.ts","components/Tasks.tsx","components/TaskField.components.ts","components/TaskField.tsx","App.tsx","store/reducers/taskReducer.ts","store/reducers/index.ts","store/store.ts","index.tsx","theme/theme.ts"],"names":["taskType","addTaskAction","task","dispatch","type","addTask","payload","removeTaskAction","id","title","priority","finisUntil","removeTask","finishUntil","expireTaskAction","expireTask","Global","createGlobalStyle","Container","styled","div","theme","colors","secondary","HeaderDiv","main","Header","img","h1","Informations","white","Information","Holder","InformationTitle","h2","InformationAmount","h4","sharedStyle","css","TimeIcon","BiTime","DoneIcon","BiArrowToRight","ExpiredIcon","BiX","Desc1","TaskElement","TaskProgress","h3","Timer","left","TaskTitle","TaskPriority","p","TaskButton","MdDoneAll","AvailableTasks","HeaderHolder","Button","button","AddIcon","MdAdd","Tasks","show","showSet","onClick","_e","TasksField","open","Input","input","Priority","PriorityElement","focused","AddTask","PrioExp","h5","TaskField","visible","visibleSet","useState","Date","taskSet","high","medium","low","active","activeSet","useDispatch","bindActionCreators","actionCreators","clickHanlder","e","name","currentTarget","placeholder","value","onChange","event","target","trim","length","console","log","taskObj","Math","random","charAt","toUpperCase","slice","toString","toLowerCase","submitHandler","App","store","useSelector","state","currentTime","currentTimeSet","refreshClock","useEffect","timerId","setInterval","clearInterval","tasks","finished","expired","map","t","i","hours","diff","abs","getTime","parseFloat","toFixed","righty","ms","seconds","minutes","floor","parseInt","setRightDate","expiredTask","storeToLocalStorage","updatedState","localStorage","setItem","JSON","stringify","orderArrayOnAction","array","sort","a","b","initialState","addTaskHanlder","hoursAdded","h","finishDate","setHours","getHours","removeTaskHanlder","obj","filter","expireTaskHanlder","defaultCase","storedState","getItem","parsedStoredState","parse","savedStore","notConvertedTask","reducer","action","rootReducer","combineReducers","taskReducer","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.02d4215e.chunk.js","sourcesContent":["export enum taskType {\r\n    addTask = \"ADD_TASK\",\r\n    removeTask = \"REMOVE_TASK\",\r\n    expireTask = \"EXPIRE_TASK\",\r\n}","import { Task, taskActions } from \"../types\"\r\nimport { taskType } from \"../action-types\"\r\nimport { Dispatch } from 'redux';\r\n\r\n\r\nexport const addTaskAction = (task: Task) => {\r\n    return (dispatch: Dispatch<taskActions>) => {\r\n        dispatch({\r\n            type: taskType.addTask,\r\n            payload: task\r\n        })\r\n    }\r\n}\r\n\r\nexport const removeTaskAction = (id: number, title: string, priority: string, finisUntil: Date) => {\r\n    return (dispatch: Dispatch<taskActions>) => {\r\n        dispatch({\r\n            type: taskType.removeTask,\r\n            payload: {\r\n                id: id,\r\n                title: title,\r\n                priority: priority,\r\n                finishUntil: finisUntil\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const expireTaskAction = (task: Task) => {\r\n    return (dispatch: Dispatch<taskActions>) => {\r\n        dispatch({\r\n            type: taskType.expireTask,\r\n            payload: task\r\n        })\r\n    }\r\n}","import styled, { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const Global = createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css2?family=Sen:wght@400;700;800&display=swap');\r\nhtml {\r\n        font-family: 'sen', sans-serif;\r\n        height: 100%;\r\n    }\r\n\r\n    * {\r\n        padding: 0;\r\n        margin: 0;\r\n        box-sizing: border-box;\r\n    }\r\n`;\r\n\r\nexport const Container = styled.div`\r\n    width: 100vw;\r\n    min-height: 100vh;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    background-color: ${({ theme }) => theme.colors.secondary};\r\n    color: ${({ theme }) => theme.colors.secondary};\r\n\r\n    @media screen and (min-width: 960px) {\r\n        \r\n    }\r\n`","import styled from \"styled-components\"\r\nimport { BiTime, BiArrowToRight, BiX } from 'react-icons/bi';\r\nimport { MdDoneAll } from 'react-icons/md';\r\nimport { css } from \"styled-components\";\r\n\r\nexport const HeaderDiv = styled.div`\r\n    width: 100%;\r\n    background-color: ${({ theme }) => theme.colors.main};\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    padding: 2rem 2rem;\r\n    font-size: 0.8rem;\r\n    height: 5rem;\r\n    position: fixed;\r\n    box-shadow: 0px 0px 12px 10px rgba(27,27,27,0.25);\r\n    z-index: 500;\r\n`;\r\n\r\nexport const Desc = styled.div`\r\n    width: 60%;\r\n    margin-left: 1rem;\r\n`\r\n\r\nexport const Profile = styled.img`\r\n    width: 100px;\r\n    height: 100px;\r\n    border-radius: 50%;\r\n    background-color: ${({ theme }) => theme.colors.secondary};\r\n`;\r\n\r\nexport const Header = styled.h1`\r\n    font-size: 2.5rem;\r\n    font-weight: 900;\r\n`;\r\n\r\nexport const Informations = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 0 2rem;\r\n    flex-direction: column;\r\n    color: ${({ theme }) => theme.colors.white};\r\n    margin-bottom: 2rem;\r\n`\r\nexport const Information = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    margin-bottom: 1rem;\r\n`\r\nexport const Holder = styled.div`\r\n    margin-left: 1rem;\r\n`\r\n\r\n\r\nexport const InformationTitle = styled.h2``\r\nexport const InformationAmount = styled.h4`\r\n    color: gray;\r\n`\r\nconst sharedStyle = css`\r\n    font-size: 3rem;\r\n    color: ${({ theme }) => theme.colors.main};\r\n`\r\n\r\nexport const TimeIcon = styled(BiTime)`\r\n    ${sharedStyle}\r\n`\r\n\r\nexport const DoneIcon = styled(BiArrowToRight)`\r\n    ${sharedStyle}\r\n`\r\n\r\nexport const ExpiredIcon = styled(BiX)`\r\n    ${sharedStyle}\r\n`\r\n\r\n//tasks\r\nexport const Desc1 = styled.div`\r\n    text-align: left;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n    flex-direction: column;\r\n`;\r\n\r\n\r\nexport const TaskElement = styled.div`\r\n    width: 90%;\r\n    height: 7rem;\r\n    margin-bottom: 2rem;\r\n    background-color: ${({ theme }) => theme.colors.secondary};\r\n    box-shadow: 0px 0px 12px 10px rgba(27,27,27,0.25);\r\n    border-radius: 10px;\r\n    display: flex;\r\n    padding: 0 1.5rem;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-direction: row;\r\n    position: relative;\r\n\r\n    &:last-child {\r\n        margin-bottom: 0;\r\n    }\r\n`;\r\n\r\nexport const TaskProgress = styled.h3`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-bottom-right-radius: 10px;\r\n    border-bottom-left-radius: 10px;\r\n    background-color: transparent;\r\n    color: darkgrey;\r\n    left: 0;\r\n    bottom: 0;\r\n    font-weight: 600;\r\n    z-index: 100;\r\n    margin-bottom: 0.2rem;\r\n`;\r\n\r\ntype Progress = {\r\n    left: number\r\n}\r\n\r\nexport const Timer = styled.div<Progress>`\r\n    width: ${({ left }) => `${left}%`};\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-bottom-right-radius: 10px;\r\n    border-bottom-left-radius: 10px;\r\n    background-color: ${({ theme }) => theme.colors.main};\r\n    color: ${({ theme }) => theme.colors.secondary};\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    font-weight: 600;\r\n    height: 0.2rem;\r\n    transition: all 0.5s;\r\n`;\r\n\r\nexport const TaskTitle = styled.h2`\r\n    font-weight: 800;\r\n    font-size: 1.7rem;\r\n    margin-bottom: 0.2rem;\r\n    color: ${({ theme }) => theme.colors.white};\r\n`;\r\n\r\nexport const TaskPriority = styled.p`\r\n    color: gray;\r\n    font-size: 1rem;\r\n    font-weight: 600;\r\n    color: ${({ theme }) => theme.colors.main};\r\n`;\r\n\r\nexport const TaskButton = styled(MdDoneAll)`\r\n    color: ${({ theme }) => theme.colors.main};\r\n    opacity: 0.5;\r\n    font-size: 2rem;\r\n    transition: all 1s;\r\n\r\n    &:hover {\r\n        cursor: pointer;\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\n//AvailableTasks\r\nexport const AvailableTasks = styled.div`\r\n    width: 100%;\r\n    //min-height: 423px; //only if TaskNow \r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    flex-direction: column;\r\n`","import styled from \"styled-components\"\r\nimport { MdDoneAll, MdAdd } from 'react-icons/md'\r\n\r\nexport const Holder = styled.div`\r\n    color: ${({ theme }) => theme.colors.white};\r\n    text-align: center;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    padding: 2rem 0rem;\r\n    padding-top: 7rem;\r\n    font-size: 0.9rem;\r\n    width: 100%;\r\n`;\r\n\r\nexport const Header = styled.h1`\r\n`;\r\n\r\nexport const Desc = styled.div`\r\n    text-align: left;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n    flex-direction: column;\r\n`;\r\n\r\n\r\nexport const TaskElement = styled.div`\r\n    width: 90%;\r\n    margin-bottom: 2rem;\r\n    background-color: ${({ theme }) => theme.colors.secondary};\r\n    box-shadow: 0px 0px 12px 10px rgba(27,27,27,0.25);\r\n    border-radius: 10px;\r\n    display: flex;\r\n    padding: 0 1.5rem;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-direction: row;\r\n    position: relative;\r\n`;\r\n\r\nexport const TaskProgress = styled.div`\r\n    width: 100%;\r\n    \r\n    border-bottom-right-radius: 10px;\r\n    border-bottom-left-radius: 10px;\r\n    background-color: ${({ theme }) => theme.colors.main};\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n`;\r\n\r\nexport const TaskTitle = styled.h2`\r\n    font-weight: 800;\r\n    font-size: 1.7rem;\r\n    margin-bottom: 0.5rem;\r\n`;\r\n\r\nexport const TaskPriority = styled.p`\r\n    color: ${({ theme }) => theme.colors.main};\r\n    font-size: 1rem;\r\n    font-weight: 600;\r\n`;\r\n\r\nexport const TaskButton = styled(MdDoneAll)`\r\n    color: ${({ theme }) => theme.colors.main};\r\n    opacity: 0.5;\r\n    font-size: 2rem;\r\n    transition: all 1s;\r\n\r\n    &:hover {\r\n        cursor: pointer;\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nexport const HeaderHolder = styled.div`\r\n    padding: 0 2rem;\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    bottom: 5%;\r\n    left: 50%;\r\n    transform: translate(-50%, 0);\r\n    border-radius: 25px;\r\n    width: 25px;\r\n    height: 25px;\r\n    text-align: center;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: ${({ theme }) => theme.colors.white};\r\n    background-color: transparent;\r\n    font-weight: 900;\r\n    font-size: 2rem;\r\n    border: none;\r\n    z-index: 0;\r\n`;\r\n\r\nexport const AddIcon = styled(MdAdd)`\r\n    color: gray;\r\n    cursor: pointer;\r\n    font-size: 3rem;\r\n    transition: all 0.5s;\r\n\r\n    &:hover {\r\n        color: darkgrey;\r\n    }\r\n`","import React from 'react';\r\n\r\nimport {\r\n    Holder,\r\n    HeaderHolder,\r\n    Header,\r\n    Button,\r\n    AddIcon\r\n  } from './Tasks.elements'\r\n\r\ninterface IProps {\r\n    show: boolean;\r\n    showSet: React.Dispatch<React.SetStateAction<boolean>>\r\n}\r\n\r\nconst Tasks: React.FC<IProps> = ({show, showSet}) => {\r\n\r\n    return (\r\n        <Holder>\r\n            <HeaderHolder>\r\n                <Header>My tasks</Header>\r\n                <Button onClick={(_e) => showSet(!show)}>\r\n                    <AddIcon/>\r\n                </Button>\r\n            </HeaderHolder>\r\n        </Holder>\r\n    );\r\n};\r\n\r\nexport default Tasks;","import styled from 'styled-components';\r\nimport { MdAdd } from 'react-icons/md'\r\n\r\ntype TaskFieldProps = {\r\n    open: boolean\r\n}\r\n\r\ntype Props = {\r\n    focused: boolean\r\n}\r\n\r\nexport const TasksField = styled.div<TaskFieldProps>`\r\n    z-index: 2000;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    top: ${({ open }) => (open ? 0 : '-100vh')};\r\n    opacity: ${({ open }) => (open ? 1 : 0)};\r\n    background-color: ${({ theme }) => theme.colors.main};\r\n    width: 100vw;\r\n    height: 100vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    transition: all 0.5s;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    width: 90%;\r\n    font-family: inherit;\r\n    padding: 2rem 0;\r\n    border: none;\r\n    outline: none;\r\n    background-color: transparent;\r\n    text-align: center;\r\n    color: inherit;\r\n    font-weight: 800;\r\n    font-size: 2.5rem;\r\n    margin-bottom: 2rem;\r\n\r\n\r\n    &::placeholder {\r\n        color: inherit;\r\n        font-weight: 800;\r\n    }\r\n`\r\n\r\nexport const Priority = styled.div`\r\n    width: 90%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: row;\r\n`\r\n\r\nexport const PriorityElement = styled.div<Props>`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 100%;\r\n    padding: 1rem;\r\n    font-weight: 800;\r\n    font-size: 1.7rem;\r\n    margin: 0 1rem;\r\n    border: 6px solid ${({ theme }) => theme.colors.secondary};;\r\n    background-color: ${({ theme, focused }) => (focused ? theme.colors.secondary : theme.colors.main)};\r\n    color: ${({ theme, focused }) => (focused ? theme.colors.main : theme.colors.secondary)};\r\n    transition: all 0.4s;\r\n    cursor: pointer;\r\n`\r\n\r\nexport const AddIcon = styled(MdAdd)`\r\n    color: gray;\r\n`\r\n\r\nexport const AddTask = styled.button`\r\n    position: absolute;\r\n    left: 50%;\r\n    bottom: 5%;\r\n    transform: translate(-50%, -5%);\r\n    background-color: ${({ theme }) => theme.colors.secondary};\r\n    border: 0;\r\n    border-radius: 25px;\r\n    width: 90%;\r\n    color: ${({ theme }) => theme.colors.main};\r\n    font-family: inherit;\r\n    font-weight: bold;\r\n    font-size: 1.5em;\r\n    padding: 2rem 0;\r\n    cursor: pointer;\r\n`;\r\n\r\nexport const PrioExp = styled.h5`\r\n    margin-top: 2rem;\r\n    padding: 0 2rem;\r\n`","import React, {useState} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { actionCreators } from '../store';\r\n\r\nimport { Task } from '../store/types';\r\n\r\nimport {\r\n    TasksField,\r\n    Input,\r\n    Priority,\r\n    PriorityElement,\r\n    AddTask,\r\n    PrioExp\r\n} from './TaskField.components'\r\n\r\ninterface IState {\r\n    task: Task;\r\n}\r\n\r\ninterface IProps {\r\n    visible: boolean,\r\n    visibleSet: React.Dispatch<React.SetStateAction<boolean>>\r\n}\r\n\r\nconst TaskField: React.FC<IProps> = ({visible, visibleSet}) => {\r\n    const [task, taskSet] = useState<IState[\"task\"]>({\r\n        id: 0,\r\n        title: '',\r\n        priority: 'medium',\r\n        finishUntil: new Date()\r\n    });\r\n\r\n    const [active, activeSet] = useState({\r\n        high: false,\r\n        medium: true,\r\n        low: false\r\n    })\r\n\r\n    const dispatch = useDispatch();\r\n    const {\r\n        addTaskAction\r\n    } = bindActionCreators(actionCreators, dispatch)\r\n\r\n    const submitHandler = () => {\r\n       if(\r\n        task.title.trim().length <= 0 ||\r\n        task.priority.trim().length <= 0\r\n       ) { \r\n        console.log('error')\r\n           //Error modal logic\r\n           visibleSet(!visible)\r\n           return\r\n       }\r\n        const taskObj: Task = {\r\n            id: Math.random(),\r\n            title: task.title.charAt(0).toUpperCase() + task.title.slice(1),\r\n            priority: task.priority.toString().toLowerCase(),\r\n            finishUntil: new Date()\r\n        }\r\n        addTaskAction(taskObj);\r\n        \r\n        taskSet({\r\n            id: 0,\r\n            title: '',\r\n            priority: 'medium',\r\n            finishUntil: new Date()\r\n        })\r\n        activeSet({\r\n            high: false,\r\n            medium: true,\r\n            low: false\r\n        })\r\n        visibleSet(!visible)\r\n    }\r\n\r\n    const changeHanlder = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n        taskSet({\r\n            ...task,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    const clickHanlder = (e: React.MouseEvent<HTMLDivElement, MouseEvent>, name: string): void => {\r\n        taskSet({\r\n            ...task,\r\n            [name]: e.currentTarget.id\r\n        })\r\n        const temporaryReset = {\r\n            high: false,\r\n            medium: false,\r\n            low: false\r\n        }\r\n\r\n        activeSet({\r\n            ...temporaryReset,\r\n            [e.currentTarget.id]: true\r\n        })\r\n    }\r\n\r\n    return (\r\n             <TasksField open={visible ? true : false}>\r\n                <Input name=\"title\" placeholder=\"add title...\" value={task.title} onChange={(event) => changeHanlder(event)}/>\r\n                <Priority>\r\n                    <PriorityElement focused={active.high} id=\"high\" onClick={(e) => clickHanlder(e, \"priority\")}>p1</PriorityElement>\r\n                    <PriorityElement focused={active.medium} id=\"medium\" onClick={(e) => clickHanlder(e, \"priority\")}>p2</PriorityElement>\r\n                    <PriorityElement focused={active.low} id=\"low\" onClick={(e) => clickHanlder(e, \"priority\")}>p3</PriorityElement>\r\n                </Priority>\r\n                <PrioExp>\r\n                    You will have {active.high && \"2\"} {active.medium && \"4\"} {active.low && \"8\"} hours \r\n                </PrioExp>\r\n                <AddTask onClick={() => submitHandler()}>add task</AddTask>\r\n            </TasksField>\r\n    );\r\n};\r\n\r\nexport default TaskField;","import {useEffect, useState} from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { actionCreators } from './store';\nimport { RootState } from './store/reducers';\n\nimport { Container } from './theme/global';\n\nimport {\n  HeaderDiv,\n  Header,\n  Informations,\n  Information,\n  InformationAmount,\n  InformationTitle,\n  TimeIcon,\n  DoneIcon,\n  ExpiredIcon,\n  Holder,\n  TaskElement,\n  Desc1,\n  TaskTitle,\n  TaskPriority,\n  TaskButton,\n  TaskProgress,\n  AvailableTasks,\n  Timer\n} from './App.elements'\n\nimport Tasks from './components/Tasks';\n//import TaskNow from './components/TaskNow';\n// @ts-ignore: Unreachable code error\nimport TaskField from './components/TaskField.tsx';\nimport { Task } from './store/types';\n\nconst App = () => {\n  const store = useSelector((state: RootState) => state);\n  const dispatch = useDispatch();\n\n  const [currentTime, currentTimeSet] = useState<Date>(new Date());\n  \n  const refreshClock = () => {\n    currentTimeSet(new Date())\n  }\n\n  const {\n    removeTaskAction,\n    expireTaskAction\n  } = bindActionCreators(actionCreators, dispatch)\n\n  const [show, showSet] = useState<boolean>(false)\n\n  const setRightDate = (ms: number) => {\n    let seconds = (ms / 1000).toFixed(0).toString();\n    let minutes = Math.floor(parseInt(seconds) / 60).toString();\n    let hours = \"\";\n    if (parseInt(minutes) > 59) {\n        hours = Math.floor(parseInt(minutes) / 60).toString();\n        hours = (parseInt(hours) >= 10) ? hours : \"0\" + hours;\n        minutes = (parseInt(minutes) - (parseInt(hours) * 60)).toString();\n        minutes = (parseInt(minutes) >= 10) ? minutes : \"0\" + minutes;\n    }\n\n    seconds = Math.floor(parseInt(seconds) % 60).toString();\n    seconds = (parseInt(seconds) >= 10) ? seconds : \"0\" + seconds;\n    if (hours !== \"\") {\n        return hours + \":\" + minutes + \":\" + seconds;\n    }\n    return minutes + \":\" + seconds;\n  }\n\n  useEffect(() => {\n    const timerId = setInterval(refreshClock, 1000);\n    return function cleanup() {\n      clearInterval(timerId);\n    };\n  }, [])\n\n  return (\n    \n    <Container>\n      <HeaderDiv>\n          <Header>leftry.</Header>\n      </HeaderDiv>\n\n      <Tasks show={show} showSet={showSet}/>\n\n      <Informations>\n          <Information>\n              <TimeIcon />\n              <Holder>\n                <InformationTitle>All Tasks</InformationTitle>\n                <InformationAmount>{store.tasks.tasks.length} tasks</InformationAmount>\n              </Holder>\n          </Information>\n          <Information>\n              <DoneIcon />\n              <Holder>\n                <InformationTitle>Completed</InformationTitle>\n                <InformationAmount>{store.tasks.finished.length} tasks completed</InformationAmount>\n              </Holder>\n          </Information>\n          <Information>\n              <ExpiredIcon />\n              <Holder>\n                <InformationTitle>Expired</InformationTitle>\n                <InformationAmount>{store.tasks.expired.length} tasks expired</InformationAmount>\n              </Holder>\n          </Information>\n      </Informations>\n\n      <AvailableTasks>\n        {store.tasks.tasks.length > 0 ? store.tasks.tasks.map((t, i) => {\n          const diff = Math.abs(t.finishUntil.getTime() - currentTime.getTime());\n          let hours: number;\n          if(t.priority === 'high') {\n            hours = 2\n          } else if (t.priority === 'medium'){\n            hours = 4\n          } else {\n            hours = 8\n          }\n          let startMiliseconds = hours * 60 * 60 *1000;\n\n          const left = parseFloat(((100 * diff) / startMiliseconds).toFixed(2));\n          const righty = setRightDate(diff);\n\n          if(left <= 0.00) {\n              //Expired Action\n              const expiredTask: Task = {\n                id: t.id,\n                finishUntil: t.finishUntil,\n                priority: t.priority,\n                title: t.title\n              }\n              expireTaskAction(expiredTask)\n          }\n\n          if(i <= 2) {\n            return (\n              <TaskElement key={t.id}>\n                <Desc1>\n                    <TaskTitle>{t.title}</TaskTitle>\n                    <TaskProgress>{righty}</TaskProgress>\n                    <TaskPriority>{t.priority}</TaskPriority>\n                </Desc1>\n                <TaskButton onClick={() => removeTaskAction(t.id, t.title, t.priority, t.finishUntil)}></TaskButton>\n                <Timer left={left}></Timer>\n              </TaskElement>\n            )\n              }\n              return <></>\n          }) : <TaskTitle>no tasks</TaskTitle>\n        }\n      </AvailableTasks>\n\n      <TaskField visible={show} visibleSet={showSet}>\n\n      </TaskField>\n      {/* <TaskNow>\n      </TaskNow> */}\n\n    </Container>\n  );\n}\n\nexport default App;\n","import { title } from \"process\";\r\nimport { taskType } from \"../action-types\";\r\nimport { taskActions } from \"../types\";\r\nimport { Task } from '../types/index';\r\n\r\ntype State = {\r\n    tasks: {\r\n        id: number;\r\n        title: string;\r\n        priority: string;\r\n        finishUntil: Date //Date\r\n    }[],\r\n    finished: {\r\n        id: number;\r\n        title: string;\r\n        priority: string;\r\n        finishUntil: Date\r\n    }[],\r\n    expired: {\r\n        id: number;\r\n        title: string;\r\n        priority: string;\r\n        finishUntil: Date\r\n    }[]\r\n}\r\n\r\nconst storeToLocalStorage = (updatedState: State) => {\r\n    localStorage.setItem(\"state\", JSON.stringify(updatedState))\r\n}\r\n\r\nconst orderArrayOnAction = (array: State) => {\r\n    return array.tasks.sort((a: Task, b: Task) => {\r\n        return Math.abs(new Date(a.finishUntil).getTime()) - Math.abs(new Date(b.finishUntil).getTime());\r\n    });\r\n}\r\n\r\nconst initialState: State = {\r\n    tasks: [],\r\n    finished: [],\r\n    expired: [],\r\n};\r\n\r\nconst addTaskHanlder = (state: State, task: Task) => {\r\n    let finishDate = task.finishUntil;\r\n    let hoursAdded: number;\r\n\r\n    const addHours = function (h: any) {\r\n        finishDate.setHours(finishDate.getHours() + h);\r\n        return finishDate;\r\n    }\r\n\r\n    if (task.priority === 'high') {\r\n        hoursAdded = 2;\r\n    } else if (task.priority === 'medium') {\r\n        hoursAdded = 4;\r\n    } else {\r\n        hoursAdded = 8;\r\n    }\r\n    finishDate = addHours(hoursAdded);\r\n\r\n    const updatedState = {\r\n        ...state,\r\n        tasks: [\r\n            ...state.tasks,\r\n            task\r\n        ]\r\n    }\r\n\r\n    storeToLocalStorage(updatedState);\r\n\r\n    return updatedState\r\n}\r\n\r\nconst removeTaskHanlder = (state: State, obj: Task) => {\r\n    console.log(obj)\r\n\r\n    const updatedState = {\r\n        ...state,\r\n        finished: [\r\n            ...state.finished,\r\n            obj\r\n        ],\r\n        tasks: state.tasks.filter(t => t.id !== obj.id)\r\n    }\r\n\r\n\r\n    orderArrayOnAction(updatedState)\r\n\r\n    storeToLocalStorage(updatedState);\r\n\r\n    return updatedState;\r\n}\r\n\r\nconst expireTaskHanlder = (state: State, obj: Task) => {\r\n    const updatedState = {\r\n        ...state,\r\n        expired: [\r\n            ...state.expired,\r\n            obj\r\n        ],\r\n        tasks: state.tasks.filter(t => t.id !== obj.id)\r\n    }\r\n\r\n    return updatedState;\r\n}\r\n\r\nconst defaultCase = (state: State) => {\r\n    const storedState = localStorage.getItem(\"state\");\r\n    if (!storedState) {\r\n        return state;\r\n    }\r\n    const parsedStoredState = JSON.parse(storedState);\r\n\r\n    const savedStore = {\r\n        expired: parsedStoredState.expired,\r\n        finished: parsedStoredState.finished,\r\n        tasks: parsedStoredState.tasks.map((notConvertedTask: Task) => {\r\n            const object: Task = {\r\n                ...notConvertedTask,\r\n                finishUntil: new Date(notConvertedTask.finishUntil)\r\n            }\r\n            return object;\r\n        })\r\n    }\r\n\r\n    orderArrayOnAction(savedStore)\r\n\r\n    return savedStore;\r\n}\r\n\r\nconst reducer = (state = initialState, action: taskActions): State => {\r\n    switch (action.type) {\r\n        case taskType.addTask:\r\n            return addTaskHanlder(state, action.payload);\r\n        case taskType.removeTask:\r\n            return removeTaskHanlder(state, action.payload);\r\n        case taskType.expireTask:\r\n            return expireTaskHanlder(state, action.payload);\r\n        default:\r\n            return defaultCase(state)\r\n    }\r\n}\r\n\r\nexport default reducer;","import { combineReducers } from \"redux\";\r\n\r\nimport taskReducer from './taskReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    tasks: taskReducer\r\n});\r\n\r\nexport default rootReducer;\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    {},\r\n    applyMiddleware(thunk)\r\n);\r\n\r\nexport default store;\r\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nimport {Provider} from 'react-redux';\nimport store from './store/store'\n\nimport { ThemeProvider } from 'styled-components';\nimport Theme from './theme/theme';\nimport {Global} from './theme/global';\n\nReactDOM.render(\n  <>\n    <Global></Global>\n    <Provider store={store}>\n      <ThemeProvider theme={Theme}>\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </>,\n  document.getElementById('root')\n);","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n    colors: {\r\n        main: '#FFCC66',\r\n        secondary: '#282828',\r\n        white: \"#DDD\"\r\n    }\r\n}"],"sourceRoot":""}